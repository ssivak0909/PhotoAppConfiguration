dev$ git merge master -m "merging from master"
#on top of all dev committs, it will add master's commits
# Ex:  1st u change temp9 file and commit in master branch
# and you come to dev branch and change temp6 file (change some file and commit) and commit into dev branch
#now run this command 
dev$ git merge master -m "merging from master"
#and check logs 
dev$ git log --oneline --graph    
#it will display master commits on top of dev's commits even though, you 1st committed changes in master 

#Conflicts using rebase
# Ex:  1st u change temp9 file and commit in master branch
$ echo "1st statement in temp 9 using master branch" > temp9
$ git commit -am "1st statement added in temp9 file using master" 
$ git checkout dev
$ echo "2nd statement appended in temp 9 using dev branch" > temp9
$ git commit -am "2nd statement appended in temp9 file using dev" 
$ git checkout master
$ echo "3rd statement appended in temp 9 using master branch" > temp9
$ git commit -am "3rd statement appended in temp9 file using master" 
$ git checkout dev
$ git log --oneline --graph
$ git rebase master
#now conflicts will come and now we will be in rebase temperory branch (neithor dev nor master)
$ subl temp9
#resolve conflicts and add to temperory rebase repo
# git add .
$ git rebase --continue
#now conflicts are merged

# and you come to dev branch and change temp6 file (change some file and commit) and commit into dev branch
#now run this command 
dev$ git merge master -m "merging from master"
#and check logs 
dev$ git log --oneline --graph    
#it will display master commits on top of dev's commits even though, you 1st committed changes in master 